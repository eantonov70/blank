{"version":3,"file":"index.js","sources":["../src/client.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-non-null-assertion */\n\nimport type { AuthClientTypes } from '@walletconnect/auth-client'\nimport { AuthClient, generateNonce } from '@walletconnect/auth-client'\nimport type { WalletConnectModalConfig } from '@walletconnect/modal'\nimport { WalletConnectModal } from '@walletconnect/modal'\n\n// -- Types ----------------------------------------------------------------\nexport interface WalletConnectModalAuthOptions {\n  projectId: string\n  metadata: AuthClientTypes.Metadata\n  modalOptions?: Omit<\n    WalletConnectModalConfig,\n    'chains' | 'enableAuthMode' | 'projectId' | 'walletConnectVersion'\n  >\n}\n\nexport interface WalletConnectModalAuthSignInArguments {\n  statement: string\n  chainId?: string\n  aud?: string\n  domain?: string\n}\n\n// -- Client ---------------------------------------------------------------\nexport class WalletConnectModalAuth {\n  #options: WalletConnectModalAuthOptions\n\n  #modal: WalletConnectModal\n\n  #initAuthClientPromise?: Promise<void> = undefined\n\n  #authClient?: InstanceType<typeof AuthClient> = undefined\n\n  public constructor(options: WalletConnectModalAuthOptions) {\n    this.#options = options\n    this.#modal = this.#initModal()\n    this.#initAuthClient()\n  }\n\n  // -- public ------------------------------------------------------------\n  public async signIn(args: WalletConnectModalAuthSignInArguments) {\n    const { chainId, statement, aud, domain } = args\n    const defaultChainId = chainId ?? 'eip155:1'\n    const defaultAud = aud ?? location.href\n    const defaultDomain = domain ?? location.host\n\n    return new Promise<{ valid: boolean; address: string; cacao: Record<string, string> }>(\n      async (resolve, reject) => {\n        if (!this.#authClient) {\n          await this.#initAuthClient()\n        }\n\n        const unsubscribeModal = this.#modal.subscribeModal(state => {\n          if (!state.open) {\n            unsubscribeModal()\n            reject(new Error('Modal closed'))\n          }\n        })\n\n        this.#authClient!.once('auth_response', ({ params }) => {\n          unsubscribeModal()\n          this.#modal.closeModal()\n          // @ts-expect-error - result exists\n          if (params.result) {\n            resolve({\n              valid: true,\n              // @ts-expect-error - result exists\n              address: params.result.p.iss.split(':')[4],\n              // @ts-expect-error - result exists\n              cacao: params.result\n            })\n          } else {\n            // @ts-expect-error - message exists\n            reject(new Error(params.message))\n          }\n        })\n\n        const { uri } = await this.#authClient!.request({\n          aud: defaultAud,\n          domain: defaultDomain,\n          chainId: defaultChainId,\n          type: 'eip4361',\n          nonce: generateNonce(),\n          statement\n        })\n\n        if (uri) {\n          await this.#modal.openModal({ uri, chains: [defaultChainId] })\n        }\n      }\n    )\n  }\n\n  // -- private -----------------------------------------------------------\n  #initModal() {\n    const { modalOptions, projectId } = this.#options\n\n    return new WalletConnectModal({\n      ...modalOptions,\n      enableAuthMode: true,\n      projectId\n    })\n  }\n\n  async #initAuthClient() {\n    if (!this.#initAuthClientPromise && typeof window !== 'undefined') {\n      this.#initAuthClientPromise = this.#createAuthClient()\n    }\n\n    return this.#initAuthClientPromise\n  }\n\n  async #createAuthClient() {\n    this.#authClient = await AuthClient.init({\n      metadata: this.#options.metadata,\n      projectId: this.#options.projectId\n    })\n  }\n}\n"],"names":["q","b","O","n","t","e","j","v","A","o","d","p","u","_options","_modal","_initAuthClientPromise","_authClient","_initModal","initModal_fn","_initAuthClient","initAuthClient_fn","_createAuthClient","createAuthClient_fn","WalletConnectModalAuth","options","__privateAdd","__privateSet","__privateMethod","args","chainId","statement","aud","domain","defaultChainId","defaultAud","defaultDomain","resolve","reject","__privateGet","unsubscribeModal","state","params","uri","generateNonce","modalOptions","projectId","WalletConnectModal","__spreadProps","__spreadValues","AuthClient"],"mappings":"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"}